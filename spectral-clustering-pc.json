{"version":2,"kind":"Notebook","sha256":"b70af5050c8947979ffbfa08f27ecc83bd63f6c6267c8c55cc9edbbba66e200d","slug":"spectral-clustering-pc","location":"/notebooks/2.0_Spectral_Clustering_PC.ipynb","dependencies":[],"frontmatter":{"title":"Spectral Clustering","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Demetris Roumis","given":"Demetris","family":"Roumis"},"name":"Demetris Roumis","url":"https://github.com/droumis","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/landsat-ml-cookbook","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/landsat-ml-cookbook/blob/main/notebooks/2.0_Spectral_Clustering_PC.ipynb","thumbnail":"/landsat-ml-cookbook/build/spectral_clustering-0fdcfc8f8ed06e13cddde5c39481ec21.png","exports":[{"format":"ipynb","filename":"2.0_Spectral_Clustering_PC.ipynb","url":"/landsat-ml-cookbook/build/2.0_Spectral_Cluster-64023b628760c625caebeb003dda68d7.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"image","url":"/landsat-ml-cookbook/build/spectral_clustering-0fdcfc8f8ed06e13cddde5c39481ec21.png","alt":"Spectral Clustering","title":"Spectral Clustering","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cTbAMGtCqH","urlSource":"images/spectral_clustering.png"}],"key":"ACVnkJhU9u"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zpfTrYerpA"}],"key":"CNaYj11B5N"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GSMsVc4pn8"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"FE3M7f3s1F"}],"key":"JdjHrdooru"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The current notebook will demonstrate a simplified machine learning approach to observe the change in a lake waterâ€™s extent across time. In order to identify the water, we can use spectral clustering to classify each grid cell into a category based on the similarity of the combined set of pixels across ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fucUVCcmBc"},{"type":"link","url":"/intro-landsat","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"wavelength-bands","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xIu0o6bTfi"}],"urlSource":"./0.0_Intro_Landsat","dataUrl":"/intro-landsat.json","internal":true,"protocol":"file","key":"HiamhFOPnR"},{"type":"text","value":" in our image stacks.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xz11DLEIXf"}],"key":"hxAlLK6Ohm"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Our example approach uses a version of spectral clustering from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"utDJ7zUJ7E"},{"type":"link","url":"http://ml.dask.org/clustering.html#spectral-clustering","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"dask_ml","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tMywzY62EH"}],"urlSource":"http://ml.dask.org/clustering.html#spectral-clustering","key":"X3kIhZACH6"},{"type":"text","value":" that is a scalable equivalent of what is available in ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wADlV8ISdv"},{"type":"link","url":"https://scikit-learn.org/stable/modules/clustering.html#spectral-clustering","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"scikit-learn","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yh02bp7y0w"}],"urlSource":"https://scikit-learn.org/stable/modules/clustering.html#spectral-clustering","key":"Z963IcuAdH"},{"type":"text","value":". We will begin this approach with a single image stack and then conduct a direct comparison on the results from different time points.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"a703tVe5ax"}],"key":"Hq90EJOtNO"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This workflow uses data from Microsoft Planetary Computer but it can be adapted to work with any data ingestion approach from this cookbook.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vQAzIpSSGS"}],"key":"u3sYl8HEz4"}],"key":"BdiHaMJbvr"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UVYd4bMjhk"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"GYu1DrRy1X"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hOjesQelGt"}],"key":"AJSH4lVURD"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Fu0W8b3ToN"}],"key":"AMkMKjgwme"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vTzZwEu3m2"}],"key":"AFt42YTUpW"}],"key":"WPanjBassx"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"/data-ingestion-geospatial","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Data Ingestion - Geospatial-Specific Tooling","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qjcWjAFqqo"}],"urlSource":"1.0_Data_Ingestion-Geospatial.ipynb","dataUrl":"/data-ingestion-geospatial.json","internal":true,"protocol":"file","key":"a5Sj32A30R"}],"key":"SLJKmbLr03"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"t6pMla2q2U"}],"key":"x18ULNtthd"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[],"key":"v4lsC0ZKXm"}],"key":"kkCHoQJ7F8"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://scikit-learn.org/stable/modules/clustering.html#spectral-clustering","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"scikit-learn","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ckNoDP1gSC"}],"urlSource":"https://scikit-learn.org/stable/modules/clustering.html#spectral-clustering","key":"G2FCjVFJMS"}],"key":"KXiHETMr9y"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"CttyFZnfj5"}],"key":"xanEgF1DL6"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Spectral clustering","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"SFlCT9o171"}],"key":"aPr7tysbyy"}],"key":"K1IfPMhOW0"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"http://ml.dask.org/clustering.html#spectral-clustering","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"dask_ml","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rn5IeMYf0F"}],"urlSource":"http://ml.dask.org/clustering.html#spectral-clustering","key":"z0BdFpUDvO"}],"key":"jApVZYU2e7"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"QVCOZsFoSw"}],"key":"VlpKzQIePM"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Spectral clustering at scale","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"adadOcUO2O"}],"key":"joDAz4ZaJW"}],"key":"BlRYC6ty0C"}],"key":"IgBE7hORGJ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"JkqoaD5NiJ"}],"key":"mfoHSYRHfJ"},{"type":"text","value":": 20 minutes.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"msGDrc6byZ"}],"key":"eFhUalh9av"}],"key":"rFc8yA2FW9"}],"key":"ceNzL0PEQj"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m5cVJ8XUcq"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"BbUSxbjmri"}],"key":"EaMjyLJaFe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nimport odc.stac\nimport pandas as pd\nimport planetary_computer\nimport pystac_client\nimport xarray as xr\nfrom dask.distributed import Client\nfrom pystac.extensions.eo import EOExtension as eo\nfrom dask_ml.cluster import SpectralClustering\nimport pyproj\n\n# Viz\nimport hvplot.xarray","key":"F9ybtNGGFL"},{"type":"output","id":"E2x7Cdqk0-EVI3_u2JMmX","data":[{"output_type":"error","traceback":"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)\nCell \u001b[0;32mIn[1], line 7\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mpystac_client\u001b[39;00m\n\u001b[1;32m      6\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mxarray\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mxr\u001b[39;00m\n\u001b[0;32m----> 7\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdask\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mdistributed\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m Client\n\u001b[1;32m      8\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mpystac\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mextensions\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01meo\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m EOExtension \u001b[38;5;28;01mas\u001b[39;00m eo\n\u001b[1;32m      9\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdask_ml\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mcluster\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m SpectralClustering\n\nFile \u001b[0;32m~/micromamba/envs/landsat-ml-cookbook/lib/python3.10/site-packages/dask/distributed.py:13\u001b[0m\n\u001b[1;32m      5\u001b[0m _import_error_message \u001b[38;5;241m=\u001b[39m (\n\u001b[1;32m      6\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdask.distributed is not installed.\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m      7\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mPlease either conda or pip install distributed:\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m      8\u001b[0m     \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m  conda install dask distributed             # either conda install\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m      9\u001b[0m     \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m  python -m pip install \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdask[distributed]\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m --upgrade    # or pip install\u001b[39m\u001b[38;5;124m'\u001b[39m\n\u001b[1;32m     10\u001b[0m )\n\u001b[1;32m     12\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m---> 13\u001b[0m     \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdistributed\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;241m*\u001b[39m\n\u001b[1;32m     14\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mImportError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[1;32m     15\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m e\u001b[38;5;241m.\u001b[39mmsg \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mNo module named \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mdistributed\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\nFile \u001b[0;32m~/micromamba/envs/landsat-ml-cookbook/lib/python3.10/site-packages/distributed/__init__.py:23\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdask\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mconfig\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m config  \u001b[38;5;66;03m# type: ignore\u001b[39;00m\n\u001b[1;32m     22\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdistributed\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01m_version\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m get_versions\n\u001b[0;32m---> 23\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdistributed\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mactor\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m Actor, ActorFuture, BaseActorFuture\n\u001b[1;32m     24\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdistributed\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mclient\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m (\n\u001b[1;32m     25\u001b[0m     Client,\n\u001b[1;32m     26\u001b[0m     CompatibleExecutor,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     35\u001b[0m     wait,\n\u001b[1;32m     36\u001b[0m )\n\u001b[1;32m     37\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdistributed\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mcore\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m Status, connect, rpc\n\nFile \u001b[0;32m~/micromamba/envs/landsat-ml-cookbook/lib/python3.10/site-packages/distributed/actor.py:13\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mtyping\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m Generic, Literal, NoReturn, TypeVar\n\u001b[1;32m     11\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mtornado\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mioloop\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m IOLoop\n\u001b[0;32m---> 13\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdistributed\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mclient\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m Future\n\u001b[1;32m     14\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdistributed\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mprotocol\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m to_serialize\n\u001b[1;32m     15\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdistributed\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mutils\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m LateLoopEvent, iscoroutinefunction, sync, thread_state\n\nFile \u001b[0;32m~/micromamba/envs/landsat-ml-cookbook/lib/python3.10/site-packages/distributed/client.py:34\u001b[0m\n\u001b[1;32m     31\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mtlz\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m first, groupby, merge, partition_all, valmap\n\u001b[1;32m     33\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdask\u001b[39;00m\n\u001b[0;32m---> 34\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdask\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mbase\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m collections_to_dsk, normalize_token, tokenize\n\u001b[1;32m     35\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdask\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mcore\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m flatten, validate_key\n\u001b[1;32m     36\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdask\u001b[39;00m\u001b[38;5;21;01m.\u001b[39;00m\u001b[38;5;21;01mhighlevelgraph\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m HighLevelGraph\n\n\u001b[0;31mImportError\u001b[0m: cannot import name 'collections_to_dsk' from 'dask.base' (/home/runner/micromamba/envs/landsat-ml-cookbook/lib/python3.10/site-packages/dask/base.py)","ename":"ImportError","evalue":"cannot import name 'collections_to_dsk' from 'dask.base' (/home/runner/micromamba/envs/landsat-ml-cookbook/lib/python3.10/site-packages/dask/base.py)"}],"key":"TbiTq4f9Vl"}],"key":"ggBbYotLkK"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Loading Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bIp2cFJGAJ"}],"identifier":"loading-data","label":"Loading Data","html_id":"loading-data","implicit":true,"key":"s8RiXhJnRU"}],"key":"rnxskJRoc0"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Letâ€™s start by loading some Landsat data. These steps are covered in the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bNzdMb9d3X"},{"type":"link","url":"1.0_Data_Ingestion-Planetary_Computer.ipynb","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data Ingestion - Planetary Computer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZcdGhXnse0"}],"urlSource":"1.0_Data_Ingestion-Planetary_Computer.ipynb","key":"VICtnKMFNO"},{"type":"text","value":" prerequisite.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QaCXhjVKyJ"}],"key":"WzINKI0uD7"}],"key":"rBXirKx86g"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Search the catalog","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"e05sDTCIhO"}],"identifier":"search-the-catalog","label":"Search the catalog","html_id":"search-the-catalog","implicit":true,"key":"Zg2p4zDpN1"}],"key":"BzGq0BeL7b"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"catalog = pystac_client.Client.open(\n    \"https://planetarycomputer.microsoft.com/api/stac/v1\",\n    modifier=planetary_computer.sign_inplace,\n)\n\nbbox = [-118.89, 38.54, -118.57, 38.84]  # Region over a lake in Nevada, USA\ndatetime = \"2017-06-01/2017-09-30\"  # Summer months of 2017\ncollection = \"landsat-c2-l2\"\nplatform = \"landsat-8\"\ncloudy_less_than = 1  # percent\n\nsearch = catalog.search(\n    collections=[\"landsat-c2-l2\"],\n    bbox=bbox,\n    datetime=datetime,\n    query={\"eo:cloud_cover\": {\"lt\": cloudy_less_than}, \"platform\": {\"in\": [platform]}},\n)\nitems = search.get_all_items()\nprint(f\"Returned {len(items)} Items:\")\n[[i, item.id] for i, item in enumerate(items)]","key":"K0SFtKNEga"},{"type":"output","id":"KGU2_gPGgXwskx-F8Bi5m","data":[],"key":"CTMMagCk2W"}],"key":"XMC3PeylVU"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load a dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lFwZwQgHPX"}],"identifier":"load-a-dataset","label":"Load a dataset","html_id":"load-a-dataset","implicit":true,"key":"m9EO5LGhVZ"}],"key":"D1ZrdRJ5hC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"item = items[1]  # select one of the results","key":"jCEygSLe3F"},{"type":"output","id":"_80dIehSPqLgcr9SStQZa","data":[],"key":"rbdfIeHRFa"}],"key":"wAJvchBv1M"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"assets = []\nfor _, asset in item.assets.items():\n    try:\n        assets.append(asset.extra_fields[\"eo:bands\"][0])\n    except:\n        pass\n\ncols_ordered = [\n    \"common_name\",\n    \"description\",\n    \"name\",\n    \"center_wavelength\",\n    \"full_width_half_max\",\n]\nbands = pd.DataFrame.from_dict(assets)[cols_ordered]\nbands","key":"Z7Bqg8gBPn"},{"type":"output","id":"TIPXtoECxq9a0weiklX6a","data":[],"key":"UfepSG7bCW"}],"key":"xttXL5lLKs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_2017 = odc.stac.stac_load(\n    [item],\n    bands=bands.common_name.values,\n    bbox=bbox,\n    chunks={},  # <-- use Dask\n).isel(time=0)","key":"RPrhNjShBA"},{"type":"output","id":"NMTUT3hrwFKySgpMobuFl","data":[],"key":"orD8qnKvgv"}],"key":"DSwn9ExvoR"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Retain CRS Attribute","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FTFNSygdBB"}],"identifier":"retain-crs-attribute","label":"Retain CRS Attribute","html_id":"retain-crs-attribute","implicit":true,"key":"fcusZzYObD"}],"key":"jO6vy5UkuN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"epsg = item.properties[\"proj:epsg\"]\nds_2017.attrs[\"crs\"] = f\"epsg:{epsg}\"","key":"gQPfhldPSV"},{"type":"output","id":"QQVcmMfnXXte4g733Qj3X","data":[],"key":"dA5cLcdoO3"}],"key":"dMeX82On69"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"da_2017 = ds_2017.to_array(dim=\"band\")\nda_2017","key":"g9057Edr4K"},{"type":"output","id":"nIAbKyMgo7X44gc-5_5kn","data":[],"key":"MAUirElK9H"}],"key":"R1VTUhprKo"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reshaping Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UOgVbaektG"}],"identifier":"reshaping-data","label":"Reshaping Data","html_id":"reshaping-data","implicit":true,"key":"EWW5h9fG6v"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The shape of our data is currently ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ccTY6EIBso"},{"type":"inlineCode","value":"n_bands","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lQG1TrWI6y"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"M3IuKkkuqE"},{"type":"inlineCode","value":"n_y","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KWoT5xjBEi"},{"type":"text","value":", ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"af63sJMQZV"},{"type":"inlineCode","value":"n_x","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fILLHqnBG8"},{"type":"text","value":". In order for dask-ml / scikit-learn to consume our data, weâ€™ll need to reshape our image stacks into ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tz4Vl9s3mI"},{"type":"inlineCode","value":"n_samples, n_features","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dJqFpsRWrB"},{"type":"text","value":", where ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Cb7HcxHrml"},{"type":"inlineCode","value":"n_features","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ncDbXFE67B"},{"type":"text","value":" is the number of wavelength-bands and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yzlWSZr4WV"},{"type":"inlineCode","value":"n_samples","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dXCkaqRSsW"},{"type":"text","value":" is the total number of pixels in each wavelength-band image. Essentially, weâ€™ll be creating a vector of pixels out of each image, where each pixel has multiple features (bands), but the ordering of the pixels is no longer relevant to the computation.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jvtbd88v95"}],"key":"iL6H9O9H5B"}],"key":"lUnyIbu7mG"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"By using xarray methods to flatten the data, we can keep track of the coordinate labels â€˜xâ€™ and â€˜yâ€™ along the way. This means that we have the ability to reshape back to our original array at any time with no information loss!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FYRS8URIvR"}],"key":"fDCHZTyPmk"}],"key":"WhD1tuHZXG"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"flattened_xda = da_2017.stack(z=(\"x\", \"y\"))  # flatten each band\nflattened_t_xda = flattened_xda.transpose(\"z\", \"band\")\nflattened_t_xda","key":"ZJMFn0sDoU"},{"type":"output","id":"epy1VF3HqtD93udJgQO3N","data":[],"key":"oNyKpTFKGh"}],"key":"V2H1Oil5DA"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Standardize Data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TYSfpgfn2L"}],"identifier":"standardize-data","label":"Standardize Data","html_id":"standardize-data","implicit":true,"key":"iBJMjeZiFK"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now that we have the data in the correct shape, letâ€™s standardize (or rescale) the values of the data. We do this to get all the flattened image vectors onto a common scale while preserving the differences in the ranges of values. Again, weâ€™ll demonstrate doing this first in NumPy and then xarray.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BSWrBwmIFP"}],"key":"IU6Gdnn1F3"}],"key":"YXOlXANOFI"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"with xr.set_options(keep_attrs=True):\n    rescaled_xda = (flattened_t_xda - flattened_t_xda.mean()) / flattened_t_xda.std()\nrescaled_xda","key":"zNQ8zj3iOG"},{"type":"output","id":"i0df3b7MgSWA3ZnPC-cyz","data":[],"key":"gAIzUFaVo2"}],"key":"y1iDEIVNiw"},{"type":"block","kind":"notebook-content","children":[{"type":"div","class":"admonition alert alert-info","children":[{"type":"paragraph","children":[{"type":"text","value":"Info","key":"iWmpWhV8e9"}],"key":"CgUYRZF6FI"},{"type":"text","value":"Above, we are using a context manager \"with xr.set_options(keep_attrs=True):\" to retain the array's attributes through the operations. That is, we want any metadata like 'crs' to stay with our result so we can use 'geo=True' in our plotting.","key":"KZFsyj06Ny"}],"key":"IRpbsihkRY"}],"key":"bw6jU0P1av"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sbZIMSZ2TC"},{"type":"inlineCode","value":"rescaled_xda","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oku61bM4L2"},{"type":"text","value":" is still a Dask object, if we wanted to actually run the rescaling at this point (provided that all the data can fit into memory), we would use ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uARH4FnN9N"},{"type":"inlineCode","value":"rescaled_xda.compute()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rwRdqdq1Nq"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LTlLwio5ry"}],"key":"oGoWOonznP"}],"key":"lSwivVjo90"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"ML pipeline","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"gdVnfdWU89"}],"identifier":"ml-pipeline","label":"ML pipeline","html_id":"ml-pipeline","implicit":true,"key":"VmEZMNhu3y"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now that our data is in the proper shape and value range, we are ready to conduct spectral clustering. Here we will use a version of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tXg7nynVoX"},{"type":"link","url":"https://ml.dask.org/modules/generated/dask_ml.cluster.SpectralClustering.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"spectral clustering from dask_ml","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nk7ZtwnQI4"}],"urlSource":"https://ml.dask.org/modules/generated/dask_ml.cluster.SpectralClustering.html","key":"cgnKJjth9S"},{"type":"text","value":" that is a scalable equivalent to operations from Scikit-learn that cluster pixels based on similarity (across all wavelength-bands, which makes it spectral clustering by spectra!)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BegBTXaz1Z"}],"key":"MUcjytcSqL"}],"key":"zfrtbDkkT1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client = Client(processes=False)\nclient","key":"Dp23cU27VD"},{"type":"output","id":"5EWe107n0PB4Ve2fs85Te","data":[],"key":"g9z0zl0Rn5"}],"key":"TRrhTT5NMP"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now we will compute and persist the rescaled data to feed into the ML pipeline. Notice that our ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EWC0u3Ypqy"},{"type":"inlineCode","value":"X","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q1P8PFlDwp"},{"type":"text","value":" matrix below has the shape: ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a7PgFNPval"},{"type":"inlineCode","value":"n_samples, n_features","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xd0gqac3cp"},{"type":"text","value":" as discussed earlier.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mFl7X7O3VN"}],"key":"tenx0NHO1l"}],"key":"J1thldjaCr"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"X = client.persist(rescaled_xda)\nX.shape","key":"jF4rnTceP4"},{"type":"output","id":"VhTaYnjPm-8QvoiLc4SN7","data":[],"key":"QVUSuii4UZ"}],"key":"KSXx8jLifw"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"First we will set up the model with the number of clusters, and other options.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"z4dZ9xbgNJ"}],"key":"h265K7Hjm3"}],"key":"ZcKlNgnY80"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"clf = SpectralClustering(\n    n_clusters=4,\n    random_state=0,\n    gamma=None,\n    kmeans_params={\"init_max_iter\": 5},\n    persist_embedding=True,\n)","key":"Mwi0syuUiR"},{"type":"output","id":"TulhUHLWGRMOJcweatahz","data":[],"key":"bvROXJ36Mt"}],"key":"cIIZul6uVj"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This next step is the slow part.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rWjLzlJav6"}],"key":"zBdPGvCOUJ"},{"type":"text","value":" Weâ€™ll fit the model to our matrix ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"irdgYDRA1n"},{"type":"inlineCode","value":"X","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TH6yMfk8Fb"},{"type":"text","value":". Depending on your setup, it could take seconds to minutes to run depending on the size of our data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bOuaXxCajD"}],"key":"y1Ke1fRBOc"}],"key":"Ug6VE5IC8R"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%time clf.fit(X)","key":"qezg7RikCh"},{"type":"output","id":"UL7lucBwyl6tjDzDobdyi","data":[],"key":"UzyGLgrDM2"}],"key":"CgiEo4eDKr"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Letâ€™s check the shape of the result:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OzRTlAky4o"}],"key":"TFkDnP7oFt"}],"key":"SqpXGRidH5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"labels = clf.assign_labels_.labels_.compute()\nlabels.shape","key":"gI2tozad1f"},{"type":"output","id":"9kaj5bprU7oBM5FtTdryW","data":[],"key":"oatrD1IzjR"}],"key":"x13HLHKBMD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"labels","key":"RloMTVZZ0T"},{"type":"output","id":"FXfUjb4fOdB6p-NK8D3aV","data":[],"key":"J2wgTTHAoT"}],"key":"G62H3bbTJu"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The result is a single vector of cluster labels.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dBMDxixsQI"}],"key":"IicMumeEUD"}],"key":"OjoY1FoxuN"},{"type":"block","kind":"notebook-content","data":{"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Un-flattening","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L11UjADUp8"}],"identifier":"un-flattening","label":"Un-flattening","html_id":"un-flattening","implicit":true,"key":"N1taGYnFQl"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Once the computation is done, we can use the coordinates of our input array to restack our output array back into an image. Again, one of the main benefits of using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NHnVfaq5fM"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HGWFJ8MASy"},{"type":"text","value":" for this stacking and unstacking is that it keeps track of the coordinate information for us.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mttsv2MlK5"}],"key":"jQr81YQZGG"}],"visibility":"show","key":"Yp2dpmK6YD"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Since the original array is n_samples by n_features (90000, 6) and the cluster label output is (90000,), we just need the coordinates from one of the original features in the shape of n_samples. We can just copy the coordinates from the first input feature and populate is with our output data:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ruE4selHqD"}],"key":"pNcWJxImuQ"}],"key":"sYp8Fcz5nH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"template = flattened_t_xda[:, 0]\noutput_array = template.copy(data=labels)\noutput_array","key":"J8V9JBq1MO"},{"type":"output","id":"nFfQVniFduWcSyYHEdcs-","data":[],"key":"FFYTBwYzKS"}],"key":"vyEUER5GbA"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"With this new output array with coordinates copied from the input array, we can unstack back to the original ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mBe8PH1Q69"},{"type":"inlineCode","value":"x","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rAsBxryaoe"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hIch9vl4a8"},{"type":"inlineCode","value":"y","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HNfdVxBRxL"},{"type":"text","value":" image dimensions by just using ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iADF3OjKQ7"},{"type":"inlineCode","value":".unstack()","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cVTW8hPsKa"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HGVsWRT68W"}],"key":"CAiQznd42v"}],"key":"oZq4zr7Mx9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"unstacked_2017 = output_array.unstack()\nunstacked_2017","key":"AeNBJn9xMQ"},{"type":"output","id":"lx1SRb_aFcANgn0gL4LAn","data":[],"key":"jAplMcAcBm"}],"key":"kLbPXzAMjD"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Finally, we can visualize the results! By hovering over the resulting imge, we can see that the lake water has been clustered with a certain label or â€˜valueâ€™.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wL44xG2Tls"}],"key":"HydUDZ7Akz"}],"key":"nFfsm46slA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"raw_plot_2017 = da_2017.sel(band=\"red\").hvplot.image(\n    x=\"x\", y=\"y\", geo=True, xlabel=\"lon\", ylabel=\"lat\", datashade=True, cmap=\"greys\", title=\"Raw Image 2017\",\n)\n\nresult_plot_2017 = unstacked_2017.hvplot(\n    x=\"x\", y=\"y\", cmap=\"Set3\", geo=True, xlabel=\"lon\", ylabel=\"lat\", colorbar=False,  title=\"Spectral Clustering 2017\",\n)\n\nraw_plot_2017 + result_plot_2017","key":"hJUJO1wm8m"},{"type":"output","id":"vmvZkjnKXxe9XzidUcDtO","data":[],"key":"C76WOF7vjc"}],"key":"eE0xUXhvzk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Spectral Clustering for 1988","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BtCJRr7f1f"}],"identifier":"spectral-clustering-for-1988","label":"Spectral Clustering for 1988","html_id":"spectral-clustering-for-1988","implicit":true,"key":"RCefcjpBoq"}],"key":"HgcyJ8XOqr"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We have conducted the spectral clustering for 2017 and now we want to compare this result to the lake in 1988. Letâ€™s load data from 1988 and run the same analysis as above.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VrndAHG9p6"}],"key":"Lrr7HSRyHF"}],"key":"qhajYKb7G9"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We will use the same catalog, but we will search it for a different point in time and different Landsat mission","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"puW53zd0xW"}],"key":"jf2GWiVhPo"}],"key":"l3EBVFheJP"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load the data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZuUVNmyir3"}],"identifier":"load-the-data","label":"Load the data","html_id":"load-the-data","implicit":true,"key":"ne2kyuJ1X1"}],"key":"g1876K9nsS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bbox = [-118.89, 38.54, -118.57, 38.84]  # Region over a lake in Nevada, USA\ndatetime = \"1988-06-01/1988-09-30\"  # Summer months of 1988\ncollection = \"landsat-c2-l2\"\nplatform = \"landsat-5\"  # Searching through an earlier landsat mission\ncloudy_less_than = 1  # percent\n\nsearch = catalog.search(\n    collections=[\"landsat-c2-l2\"],\n    bbox=bbox,\n    datetime=datetime,\n    query={\"eo:cloud_cover\": {\"lt\": cloudy_less_than}, \"platform\": {\"in\": [platform]}},\n)\n\nitems = search.get_all_items()\nitem = items[1]  # select one of the results","key":"VUy263ptjJ"},{"type":"output","id":"_0hFb4SiED_kcl-wpWCvs","data":[],"key":"ErAfrgTDCe"}],"key":"YHIqtJXW5p"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Notice that Landsat 5 data from 1988 has slightly different spectra than Landsat 8 from 2017. Details like this are important to keep in mind when performing analyses that directly compare across missions.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FhYMsN70tz"}],"key":"tIE7nEepiE"}],"key":"KPEt78Mxna"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"assets = []\nfor _, asset in item.assets.items():\n    try:\n        assets.append(asset.extra_fields[\"eo:bands\"][0])\n    except:\n        pass\n\ncols_ordered = [\n    \"common_name\",\n    \"description\",\n    \"name\",\n    \"center_wavelength\",\n    \"full_width_half_max\",\n]\nbands = pd.DataFrame.from_dict(assets)[cols_ordered]\nbands","key":"BG76E7PRer"},{"type":"output","id":"7-n5I9VJ9-pecql4PfhZc","data":[],"key":"f0MAM5uhdC"}],"key":"CruzFa7pYS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_1988 = odc.stac.stac_load(\n    [item],\n    bands=bands.common_name.values,\n    bbox=bbox,\n    chunks={},  # <-- use Dask\n).isel(time=0)\n\nepsg = item.properties[\"proj:epsg\"]\nds_1988.attrs[\"crs\"] = f\"epsg:{epsg}\"\n\nda_1988 = ds_1988.to_array(dim=\"band\")\nda_1988","key":"viBFzDRyl5"},{"type":"output","id":"R_pbJe5Bg3GkCfJ0eskoG","data":[],"key":"tuWbhJXzMg"}],"key":"yvyNuwBCmz"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Reshape and Standardize","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DmAsNEhv3Q"}],"identifier":"reshape-and-standardize","label":"Reshape and Standardize","html_id":"reshape-and-standardize","implicit":true,"key":"gdLLUQEAcI"}],"key":"Kv1dl50uFS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"flattened_xda = da_1988.stack(z=(\"x\", \"y\"))\nflattened_t_xda = flattened_xda.transpose(\"z\", \"band\")\nwith xr.set_options(keep_attrs=True):\n    rescaled_xda = (flattened_t_xda - flattened_t_xda.mean()) / flattened_t_xda.std()\nrescaled_xda","key":"VKu6mvmrdR"},{"type":"output","id":"Syly8iyVH-D5jQqkZUJwg","data":[],"key":"VAOultXaZT"}],"key":"sKj30hbLtI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Spectral Clustering","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CI21bayOm7"}],"identifier":"spectral-clustering","label":"Spectral Clustering","html_id":"spectral-clustering","implicit":true,"key":"jsiTF0KqFi"}],"key":"hp5PNynjRU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"X = client.persist(rescaled_xda)\nclf = SpectralClustering(\n    n_clusters=4,\n    random_state=0,\n    gamma=None,\n    kmeans_params={\"init_max_iter\": 5},\n    persist_embedding=True,\n)","key":"BdCOAV2bAd"},{"type":"output","id":"U_eBq6mkCI9y24qD7g5Ti","data":[],"key":"FwUs8BoSHH"}],"key":"nr0PISzZRc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"%time clf.fit(X)","key":"hUoKT48jfd"},{"type":"output","id":"_oEsERLleRP1cFe0U6ZRe","data":[],"key":"Gdmg5fMmJB"}],"key":"lzmJ4LcNRp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"labels = clf.assign_labels_.labels_.compute()\nlabels.shape","key":"n8XdKLeaOj"},{"type":"output","id":"O4KV5tUW6uxfOYNuN-l8z","data":[],"key":"Yc9t8EGqz0"}],"key":"M1YtajNIVl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"labels","key":"LsLYKfPcXJ"},{"type":"output","id":"V2EI9gL_AnoZvB_NANWDt","data":[],"key":"ExZZeKBCwJ"}],"key":"xLkH098Kav"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Unstack and Visualize","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IrRvrW8Rgd"}],"identifier":"unstack-and-visualize","label":"Unstack and Visualize","html_id":"unstack-and-visualize","implicit":true,"key":"cwrAdXVMDN"}],"key":"eJtgnwGasz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"template = flattened_t_xda[:, 0]\noutput_array = template.copy(data=labels)\nunstacked_1988 = output_array.unstack()","key":"nJGPoHFZfD"},{"type":"output","id":"ZqPXgXJlYgFG0vsZOowrE","data":[],"key":"GnxcnepCv9"}],"key":"VRtN0OCy4v"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"unstacked_1988","key":"RS3NVs6V7I"},{"type":"output","id":"-RNka_MckPKHtipnfVulV","data":[],"key":"asybSasq3t"}],"key":"PzOwklcaLY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"raw_plot_1988 = da_1988.sel(band=\"red\").hvplot.image(\n    x=\"x\", y=\"y\", geo=True, xlabel=\"lon\", ylabel=\"lat\", datashade=True, cmap=\"greys\", title=\"Raw 1988\"\n)\n\nresult_plot_1988 = unstacked_1988.hvplot(\n    x=\"x\", y=\"y\", cmap=\"Set3\", geo=True, xlabel=\"lon\", ylabel=\"lat\", colorbar=False, title=\"Spectral Clustering 1988\",\n)\n\nraw_plot_1988 + result_plot_1988","key":"PuOj9KXRyA"},{"type":"output","id":"rmqUOze2_xUz0ZAh9fHR4","data":[],"key":"TnrnIrGk4K"}],"key":"u16dZOgJu4"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Spectral Clustering Over Time","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fgSuTGYW2y"}],"identifier":"spectral-clustering-over-time","label":"Spectral Clustering Over Time","html_id":"spectral-clustering-over-time","implicit":true,"key":"z8ZO4J1Eg4"}],"key":"Y7xyhz1eMG"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Our hypothesis is that the lakeâ€™s area is receding over time and so we want to visualize the potential change. Letâ€™s first visually compare the plot of the clustering results from the different time points.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"POi1JV0An2"}],"key":"d8H9yWRPaB"}],"key":"UIsxBG2XlZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"result_plot_1988 + result_plot_2017","key":"CRtrajtvnh"},{"type":"output","id":"EwVqebG9IYjR8ofQkLqqR","data":[],"key":"UDW90yRPlt"}],"key":"p7EqwsISCl"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"By hovering over the lake in each image, we can see that the water was labeled (â€˜valueâ€™) with a certain cluster number in both images. We will programmatically grab the water cluster value from the middle of the lake using pyproj to convert from longtitude/latitude coordinates.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U8AOvFe96N"}],"key":"Y9SORxpXrA"}],"key":"sCAWwNIpXH"},{"type":"block","kind":"notebook-code","data":{"tags":[]},"children":[{"type":"code","lang":"python","executable":true,"value":"lon_lake_center = -118.71\nlat_lake_center = 38.7\n\nproj = pyproj.Proj(unstacked_1988.crs)\nlake_center_x, lake_center_y = proj(lon_lake_center, lat_lake_center)\n\nwater_cluster_1988 = int(unstacked_1988.sel(x=lake_center_x, y=lake_center_y, method='nearest'))\nwater_cluster_2017 = int(unstacked_2017.sel(x=lake_center_x, y=lake_center_y, method='nearest'))\n\nprint('water cluster values:', water_cluster_1988, water_cluster_2017)","visibility":"show","key":"QWObw20Kkw"},{"type":"output","id":"eMwW8OALMKrITUIamrT9d","data":[],"visibility":"show","key":"ELfVI8sNKL"}],"visibility":"show","key":"QxJxWRKKXI"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now, letâ€™s set any value that isnâ€™t our water cluster label to 0.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CvL3JamKnH"}],"key":"ajVePqI36X"}],"key":"jcKNtOe7TC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"with xr.set_options(keep_attrs=True):\n    water_1988 = (unstacked_1988 == water_cluster_1988).astype(int)\n    water_2017 = (unstacked_2017 == water_cluster_2017).astype(int)\n","key":"tOzEikdbUA"},{"type":"output","id":"nekzMzLYTHAtuc0P7aXrO","data":[],"key":"dv5dXRAkPl"}],"key":"lf8M0M84h0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"water_1988_plot = water_1988.hvplot(\n    x=\"x\", y=\"y\", cmap=\"greys\", geo=True, colorbar=False, title=\"1988 Water\"\n)\n\nwater_2017_plot = water_2017.hvplot(\n    x=\"x\", y=\"y\", cmap=\"greys\", geo=True, colorbar=False, title=\"2017 Water\"\n)\n\nwater_1988_plot + water_2017_plot","key":"hzM9llWQJC"},{"type":"output","id":"NjregBizvrpPyO_3scAMt","data":[],"key":"ronwvc2Z41"}],"key":"VlvjNLXasO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now we can take the difference of these water label arrays to see exactly where the water levels has changed.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ncXtdYhF8E"}],"key":"zhfDdy0zxr"}],"key":"elkAFknD10"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"with xr.set_options(keep_attrs=True):\n    water_diff = water_1988 - water_2017","key":"nM7qAxBQIf"},{"type":"output","id":"3JndMH19p3RbFjrkWjgbU","data":[],"key":"rx7mZ6yrOi"}],"key":"wdF90L8BeG"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Red pixels (array value â€˜1â€™) of our image below are where water was lost from 1988 to 2017.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ajVg2OuPzT"}],"key":"LA7qbM2VXj"}],"key":"yC7l6VqpWs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"water_diff.hvplot(\n    x=\"x\", y=\"y\", cmap='coolwarm', geo=True, xlabel=\"long\", ylabel=\"lat\", colorbar=False, title=\"Water Change 1988-2017\",\n)","key":"PsgGUHMqTV"},{"type":"output","id":"0fknAD4vlWoWAkZUhsMNa","data":[],"key":"RoCQWvlwic"}],"key":"abO9SA1N9N"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We did it! We are observing the change in the lake shoreline over time using a simple spectral clustering approach.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"v43d3iOekG"}],"key":"EDzR5eGNYT"}],"key":"M2gAyQbHs0"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Letâ€™s finish things off by adding some geo tiles as a background. To only display the colored pixels overlaid on geo tiles, we could either set the arrayâ€™s background value (â€˜0â€™) to â€˜Not a Numberâ€™ (NaN), or we could just inform hvPlot that we want the background valued pixels to be transparent with ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"F800vZB3Uu"},{"type":"inlineCode","value":".redim.nodata(value=0)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NYFlXISL2B"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ClXhfru3P0"}],"key":"kpoHaTYZSt"}],"key":"Tb8ccsg2YC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"water_diff.hvplot(\n        x=\"x\", y=\"y\", width=400, height=400, cmap='coolwarm', geo=True, xlabel=\"lon\", ylabel=\"lat\", alpha=1, colorbar=False, title=\"Water Loss from 1988 to 2017\", tiles=\"ESRI\",\n).redim.nodata(value=0)\n\n","key":"VwoGVFJX6E"},{"type":"output","id":"8VxHiZQsDmonUkszI6tPJ","data":[],"key":"pwH0jDG1jQ"}],"key":"I65uikcKls"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ICb5I5A2sx"}],"key":"A9UKBQDkrW"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XlKvPYJBkK"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"DX663v5aQX"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Starting from raw Landsat data, we have used a simple spectral clustering approach to observe the change in a lake waterâ€™s extent across time.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"v19TTBB3lM"}],"key":"iXbUqWz9zj"},{"type":"heading","depth":3,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Whatâ€™s next?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OEt9bY0XhU"}],"identifier":"whats-next","label":"Whatâ€™s next?","html_id":"whats-next","implicit":true,"key":"wEy9xzItis"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Adapt this notebook for your own use case or select another workflow example notebook.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hMvCxJg7lm"}],"key":"h5idUWrh63"}],"key":"gRqtt9yBBe"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and References","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uz3RgIAWj8"}],"identifier":"resources-and-references","label":"Resources and References","html_id":"resources-and-references","implicit":true,"key":"cLPjkOQfje"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Authored by Demetris Roumis circa Jan, 2023","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Oz5aHBUKTP"}],"key":"FMBi45U12j"}],"key":"WUzcg67JDA"}],"key":"dwcoiBIosT"}],"key":"D2oZrd48up"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Data Ingestion - General Purpose Tooling","url":"/data-ingestion-general","group":"Foundations"}}},"domain":"http://localhost:3000"}